pipeline {
    agent any

    environment {
        DOCKER_CREDENTIALS_ID = '3b76daec-e9e3-499a-95b5-6cc22c81020d'
        DOCKER_REGISTRY = 'paripuranam'
        IMAGE_VERSION = "v${env.BUILD_NUMBER}"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/paripuranam/ott-platform.git'
            }
        }

        stage('Build and Push Docker Images') {
            parallel {
                stage('Auth Service') {
                    steps {
                        script {
                            dockerImage = docker.build("${DOCKER_REGISTRY}/auth-service:${IMAGE_VERSION}", "./services/auth-service")
                            docker.withRegistry("https://${DOCKER_REGISTRY}", "${DOCKER_CREDENTIALS_ID}") {
                                dockerImage.push()
                            }
                        }
                    }
                }

                stage('Auth frontend') {
                    steps {
                        script {
                            dockerImage = docker.build("${DOCKER_REGISTRY}/auth-frontend:${IMAGE_VERSION}", "./services/auth-service/frontend")
                            docker.withRegistry("https://${DOCKER_REGISTRY}", "${DOCKER_CREDENTIALS_ID}") {
                                dockerImage.push()
                            }
                        }
                    }
                }

                // stage('streaming service') {
                //     steps {
                //         script {
                //             dockerImage = docker.build("${DOCKER_REGISTRY}/streaming-service:${IMAGE_VERSION}", "./services/streaming-service")
                //             docker.withRegistry("https://${DOCKER_REGISTRY}", "${DOCKER_CREDENTIALS_ID}") {
                //                 dockerImage.push()
                //             }
                //         }
                //     }
                // }

                // stage('streaming frontend') {
                //     steps {
                //         script {
                //             dockerImage = docker.build("${DOCKER_REGISTRY}/streaming-frontend:${IMAGE_VERSION}", "./services/streaming-frontend")
                //             docker.withRegistry("https://${DOCKER_REGISTRY}", "${DOCKER_CREDENTIALS_ID}") {
                //                 dockerImage.push()
                //             }
                //         }
                //     }
                // }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
