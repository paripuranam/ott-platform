pipeline {
    agent any

    environment {
        DOCKER_USERNAME = 'paripuranam'
        DOCKER_PASSWORD = 'Pari104607@'
        IMAGE_VERSION = "v${env.BUILD_NUMBER}"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/paripuranam/ott-platform.git'
            }
        }

        stage('Docker Login') {
            steps {
                script {
                    echo "Logging into Docker Hub using hardcoded credentials"
                    sh """
                        echo 'your-docker-password' | docker login -u 'your-docker-username' --password-stdin
                    """
                    echo "Successfully logged in to Docker Hub"
                }
            }
        }
        // Auth service staging
        stage('Build and Push Docker Images') {
            parallel {
                stage('Auth Service') {
                    steps {
                        script {
                            echo "Building Docker image for Auth Service"
                            dockerImage = docker.build("${DOCKER_USERNAME}/auth-service:${IMAGE_VERSION}", "./services/auth-service")
                            echo "Pushing Docker image for Auth Service"
                            dockerImage.push()
                        }
                    }
                }
                // Auth frontend staging
                stage('Auth Frontend') {
                    steps {
                        script {
                            echo "Building Docker image for Auth Frontend"
                            dockerImage = docker.build("${DOCKER_USERNAME}/auth-frontend:${IMAGE_VERSION}", "./services/auth-service/frontend")
                            echo "Pushing Docker image for Auth Frontend"
                            dockerImage.push()
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            echo "Cleaning up workspace"
            cleanWs()
        }

        success {
            echo "Build and push successful"
        }

        failure {
            echo "Build or push failed"
        }
    }
}
